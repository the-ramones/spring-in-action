<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd" xmlns:context="http://www.springframework.org/schema/context">
       <!-- default-autowire="byType" -->

    <!-- enables annotations like @Autowire @Inject @Resource -->
    <context:annotation-config></context:annotation-config>

                   
    <bean id="juggler" class="competition.annotation.Juggler" />
    
    <bean id="shakespeare-poem" class="competition.annotation.Poem">
        <constructor-arg name="author" type="java.lang.String" value="W. Shakespeare" />
        <constructor-arg name="title" type="java.lang.String" value="Romeo and Julliet" />
    </bean>
        
    <bean id="poetic-juggler" class="competition.annotation.PoeticJuggler">
        <constructor-arg type="java.lang.Integer" value="15" />
        <constructor-arg ref="shakespeare-poem"/>        
    </bean>
    
    <bean id="stage" class="competition.annotation.Stage" factory-method="getInstance" />
    
    <bean id="auditorium" class="competition.annotation.Auditorium" 
          init-method="turnOnTheLights" 
          destroy-method="turnOffTheLights" />
    
   <bean id="saxo" class="competition.Saxophone" />

   <bean id="kenny" class="competition.annotation.Instrumentalist">
        <property name="song" value="Jingle Bells" /> 
        <property name="instrument">
            <!--inner bean-->
            <bean class="competition.annotation.Saxophone" />
        </property>
    </bean>    
    
    <bean id="Jenny" class="competition.annotation.Instrumentalist">
        <property name="song" value="Get the fuck of here" />
        <constructor-arg name="instrument">
            <!-- inner bean, these bean are not shared among others -->
            <bean class="competition.Saxophone" />
        </constructor-arg>
    </bean>
    
    <bean id="Tenny" class="competition.annotation.Instrumentalist">
        <property name="song">
            <!-- This snippet override default @Autowired property for a bean -->
            <null />
        </property>
        <property name="instrument">
            <bean class="competition.annotation.Saxophone" />
        </property>
    </bean>    
   <!-- wiring through p-namespace prefix -->
   <bean id="kenny2" class="competition.annotation.Instrumentalist"
        p:song="Trello Trell"
        p:instrument-ref="saxo" /> 
   
   <bean id="ticket" class="competition.annotation.Ticket" scope="prototype">
   </bean>
   
   <bean id="Hank" class="competition.annotation.OneManBand">
       <property name="instruments">
            <set>
                <ref bean="saxo" />
                <ref bean="saxo" />
                <ref bean="saxo" />
                <!-- <null /> -->
                <!-- <value='value of a list' -<value> -->
                <!-- <value type="java.lang.String">value-property</value> -->
            </set>
       </property>
   </bean>    
   
   <bean id="map-hank" class="competition.annotation.OneManBandMap">
       <property name="instruments">
           <map>
               <entry key="saxo" value-ref="saxo" />
               <entry key="saxo2" value-ref="saxo" />
               <entry key="saxo3" value-ref="saxo" />
           </map>
       </property>
   </bean>
   
   <bean id="prop-hank" class="competition.annotation.OneManBandProperties">
       <property name="instruments">
           <props>
               <prop key="saxo">saxo1</prop>
               <prop key="saxo2">saxo2</prop>
               <prop key="saxo3">saxo3</prop>
           </props>
       </property>
   </bean>    
   
   <util:list id="cities">
       <bean class="competition.annotation.Poem" p:title="Chicago" p:author="12345" />
       <bean class="competition.annotation.Poem" p:title="LA" p:author="54321" />
       <value type="java.lang.String">fuck</value>
   </util:list>
   
   <util:map id="city-map">
       <entry key="chicago" value="#{cities[0]}" />
       <entry key='LA' value="#{cities[1]}" />
   </util:map>
   
   <util:properties id="twitter">
       <prop key="twitter.site">site</prop>
       <prop key="twitter.protocol">protocol</prop>
       <prop key="twitter.account">account</prop>
   </util:properties>
   
   <util:properties id="settings" location="classpath:settings.properties">       
   </util:properties>
   
   <bean id="instrument" class="competition.annotation.Saxophone">       
   </bean>
   
   <bean id="instrument2" class="competition.annotation.Saxophone" primary="false">       
   </bean>
   
   <bean id="instrument3" class="competition.annotation.Saxophone" autowire-candidate="false">       
   </bean>
   
   <bean id="tenny" class="competition.annotation.Instrumentalist" autowire="byName" >
       <property name="song" value="#{T(java.lang.Math).E}" />
   </bean>   
   
   <!-- SpEL sampples
      #{cities.?[zip gt 100].![title + ' ..']}
      #{cities.^[zip gt 100]}
      #{cities.$[zip gt 100]}
   -->
   
   <!--
   bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />
         
   <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    p:driverClassName="${jdbc.driverClassName}"
    p:url="${jdbc.url}"
    p:username="${jdbc.username}"
    p:password="${jdbc.password}" /-->

    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->

</beans>
